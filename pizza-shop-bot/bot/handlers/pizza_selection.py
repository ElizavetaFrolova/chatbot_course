import json

import bot.telegram_client
import bot.database_client
from bot.handlers.handler import Handler
from bot.handlers.handler import HandlerStatus


class PizzaSelectionHandler(Handler):
    def can_handle(self, update: dict, state: str, data: dict) -> bool:
        if "callback_query" not in update:
            return False

        if state != "WAIT_FOR_PIZZA_NAME":
            return False

        callback_data = update["callback_query"]["data"]
        return callback_data.startswith("pizza_")

    def handle(self, update: dict, state: str, data: dict) -> HandlerStatus:
        telegram_id = update["callback_query"]["from"]["id"]
        callback_data = update["callback_query"]["data"]

        pizza_names_ru = {
        "pizza_margherita": "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
        "pizza_pepperoni": "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏", 
        "pizza_quattro_stagioni": "–ß–µ—Ç—ã—Ä–µ —Å–µ–∑–æ–Ω–∞",
        "pizza_capricciosa": "–ö–∞–ø—Ä–∏—á–æ–∑–∞",
        "pizza_diavola": "–î—å—è–±–æ–ª–∞",
        "pizza_prosciutto": "–ü—Ä–æ—à—É—Ç—Ç–æ"
    }

        pizza_name = pizza_names_ru.get(callback_data, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–∏—Ü—Ü–∞")

        bot.database_client.update_user_order_json(telegram_id, {"pizza_name": pizza_name})
        bot.database_client.update_user_state(telegram_id, "WAIT_FOR_PIZZA_SIZE")
        bot.telegram_client.answerCallbackQuery(update["callback_query"]["id"])
        bot.telegram_client.deleteMessage(
            chat_id=update["callback_query"]["message"]["chat"]["id"],
            message_id=update["callback_query"]["message"]["message_id"],
        )
        bot.telegram_client.sendMessage(
            chat_id=update["callback_query"]["message"]["chat"]["id"],
            text="–í—ã–±–µ—Ä–∏ —Ä–∞–∑–º–µ—Ä –¥–ª—è —Å–≤–æ–µ–π –ø–∏—Ü—Ü—ã üòä",
            reply_markup=json.dumps(
                {
                    "inline_keyboard": [
                        [
                            {"text": "–ú–∞–ª–µ–Ω—å–∫–∞—è (25—Å–º)", "callback_data": "size_small"},
                            {"text": "–°—Ä–µ–¥–Ω—è—è (30—Å–º)", "callback_data": "size_medium"},
                        ],
                        [
                            {"text": "–ë–æ–ª—å—à–∞—è (35—Å–º)", "callback_data": "size_large"},
                            {"text": "–û–≥—Ä–æ–º–Ω–∞—è (40—Å–º)", "callback_data": "size_xl"},
                        ],
                    ],
                },
            ),
        )
        return HandlerStatus.STOP
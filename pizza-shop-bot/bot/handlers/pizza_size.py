import json

import bot.telegram_client
import bot.database_client
from bot.handlers.handler import Handler
from bot.handlers.handler import HandlerStatus


class PizzaSizeHandler(Handler):
    def can_handle(self, update: dict, state: str, data: dict) -> bool:
        if "callback_query" not in update:
            return False

        if state != "WAIT_FOR_PIZZA_SIZE":
            return False

        callback_data = update["callback_query"]["data"]
        return callback_data.startswith("size_")

    def handle(self, update: dict, state: str, data: dict) -> HandlerStatus:
        telegram_id = update["callback_query"]["from"]["id"]
        callback_data = update["callback_query"]["data"]

        size_mapping = {
            "size_small": "–ú–∞–ª–µ–Ω—å–∫–∞—è (25—Å–º)",
            "size_medium": "–°—Ä–µ–¥–Ω—è—è (30—Å–º)",
            "size_large": "–ë–æ–ª—å—à–∞—è (35—Å–º)",
            "size_xl": "–û–≥—Ä–æ–º–Ω–∞—è (40—Å–º)",
        }

        pizza_size = size_mapping.get(callback_data)
        data["pizza_size"] = pizza_size
        bot.database_client.update_user_order_json(telegram_id, data)
        bot.database_client.update_user_state(telegram_id, "WAIT_FOR_DRINKS")

        bot.telegram_client.answerCallbackQuery(update["callback_query"]["id"])

        bot.telegram_client.deleteMessage(
            chat_id=update["callback_query"]["message"]["chat"]["id"],
            message_id=update["callback_query"]["message"]["message_id"],
        )

        bot.telegram_client.sendMessage(
            chat_id=update["callback_query"]["message"]["chat"]["id"],
            text="–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–∏—Ç–∫–∏ –∫ –∑–∞–∫–∞–∑—É? ü•§",
            reply_markup=json.dumps(
                {
                    "inline_keyboard": [
                        [
                            {"text": "–ö–æ–∫–∞-–ö–æ–ª–∞", "callback_data": "drink_coca_cola"},
                            {"text": "–ü–µ–ø—Å–∏", "callback_data": "drink_pepsi"},
                        ],
                        [
                            {"text": "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫", "callback_data": "drink_orange_juice"},
                            {"text": "–Ø–±–ª–æ—á–Ω—ã–π —Å–æ–∫", "callback_data": "drink_apple_juice"},
                        ],
                        [
                            {"text": "–í–æ–¥–∞", "callback_data": "drink_water"},
                            {"text": "üçπ –ú–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å", "callback_data": "drink_milkshake"},
                        ],
                        [
                            {"text": "‚ùå –ë–µ–∑ –Ω–∞–ø–∏—Ç–∫–æ–≤", "callback_data": "drink_none"},
                        ],
                    ],
                },
            ),
        )
        return HandlerStatus.STOP